{"posts":[{"title":"React-建置環境","text":"建置環境 載入React, Babel 12345&lt;script crossorigin src=&quot;https://unpkg.com/react@18/umd/react.development.js&quot;&gt;&lt;/script&gt;&lt;script crossorigin src=&quot;https://unpkg.com/react-dom@18/umd/react-dom.development.js&quot;&gt;&lt;/script&gt;&lt;script src=&quot;https://unpkg.com/babel-standalone@6/babel.min.js&quot;&gt;&lt;/script&gt; 加入 root 元素 1&lt;div id=&quot;root&quot;&gt;&lt;/div&gt; React JSX 程式碼都寫在script text/babel 裡 123456789101112131415&lt;script type=&quot;text/babel&quot;&gt;//檢查資源有正確載入console.log(React, ReactDOM);//建立React 元件function App() { return &lt;h1&gt;成功建立React 元件&lt;/h1&gt;; //因為有加入Babel 所以不需要加引號}//渲染元件到根元件上const el = document.getElementById(&quot;root&quot;);const root = ReactDOM.createRoot(el);root.render(&lt;App /&gt;);&lt;/script&gt;","link":"/2024/08/20/React-%E7%AD%86%E8%A8%98/"},{"title":"CSS 常用語法","text":"這是六角學院JS直播班課前影片，CSS的部分 block 區塊元素預設是display: block，可以透過display: inline 改成區塊元素 特性: 盡可能佔滿整個版面 區塊元素會另起一行來呈現 包含: h* p li inline 行內元素預設是display: inline，可以透過display: block 改成區塊元素 特性: 比較常用在段落 沒辦法設定寬高 包含: span a margin作用: 產生外邊界距離 padding作用: 產生留白距離 margin vs. padding向外推 向內推 box model 盒模型 CSS Reset","link":"/2024/08/27/CSS-%E5%B8%B8%E7%94%A8%E8%AA%9E%E6%B3%95/"},{"title":"Hexo 建置","text":"Welcome to Hexo! This is your very first post. Check documentation for more info. If you get any problems when using Hexo, you can find the answer in troubleshooting or you can ask me on GitHub. Quick StartCreate a new post1$ hexo new &quot;My New Post&quot; More info: Writing Run server1$ hexo server More info: Server Generate static files1$ hexo generate More info: Generating Deploy to remote sites1$ hexo deploy More info: Deployment","link":"/2024/08/19/hello-world/"},{"title":"React-狀態","text":"State需要在用戶介面更改某些資料的時候，會需要使用到狀態","link":"/2024/08/22/React-%E7%8B%80%E6%85%8B/"},{"title":"好用軟體","text":"VSCode + 好用的Extension + Better Comments : 高亮註解 + Live Server: 即時更新網頁 + Color Highlight: Highlight web colors + Image Preview: 預覽圖片 + Auto Rename Tag: 同步更新html 結尾標籤 Whimsical 畫流程圖的網頁","link":"/2024/08/21/%E5%A5%BD%E7%94%A8%E8%BB%9F%E9%AB%94/"},{"title":"CSS Fundamentals","text":"偽類(pseudo class)特別的 CSS 語法，只會在指定的條件下成立，例如最常用的 ==:hover== 常用語法hover: 滑鼠移過時的特效 first-child: 標籤內的第一個子元素last-child: 標籤內的最後一個子元素 ※要特別注意，透過這種方式選取子元素只限於結構單一的才有作用，如果標籤結構混雜使用則會失效 例如： 想要改變div裡第一個段落文字的顏色，css 寫成下面這樣是沒辦法抓到正確元素的，因為div裡的第一個子元素應該是 h2 而不是 p 123div p:first-child { color: red;} styling links a:link 針對所有具有href屬性的anchor的初始樣式 a:visited 點擊過的樣式 a:hover 滑鼠移過的樣式 a:actived 點擊中的樣式 CSS conflicting declarations當多個不同的規則套用在同一個標籤上的時候，CSS的優先順序為-範圍越小越有特定性的，優先度越高 此圖片擷取自Udemy: Jonas Schmedtmann - Learn modern HTML5, CSS3 and web design by building a stunning website for your portfolio! Includes flexbox and CSS Grid important 關鍵字可以使一個規則宣告比其他的規則更重要 但通常不應該這樣使用，應該要把選擇器寫的更簡單(不使用過多的嵌套、不在同一個選擇器加太多ID和class)，而不是使用 important 關鍵字範例如下：當多個規則套用在同一個標籤(h1)時，會套用優先度最高的樣式(.test)，如果要強制採用優先度比較低的樣式，可以在值後面加上!important 1&lt;h1 class=&quot;test&quot;&gt;The Code Magazine&lt;/h1&gt; 12345678h1 { font-size: 44px !important; text-transform: uppercase; font-style: italic;}.test { font-size: 80px;} 繼承如果在主體中設置某些屬性，則這些屬性會被繼承給所有的子元素，但不是所有的屬性都會被繼承，會繼承的大部分都是text相關的屬性 通用選擇器(*)當想把某個屬性放在所有元素上，但這個元素不是會被繼承的元素(ex: border)，則可以使用通用選擇器 通用選擇器只是應用於所有元素，而不涉及繼承123* { border-top: 10px solid Red;} 頁面置中要把網頁內容置中，需要將標籤整個包起來，指定寬度，並且將左右邊界(margin)設為auto，由瀏覽器自行計算margin寬度 1234567&lt;body&gt; &lt;div class=&quot;container&quot;&gt; &lt;article&gt; ... &lt;/article&gt; &lt;/div&gt;&lt;/body&gt; 123456.container { border: 4px solid black; width: 70%; margin-left: auto; margin-right: auto;} 區塊元素(block element)CSS樣式預設為display:block 元素佔據的寬度為100% 可以一個接一個垂直堆疊 大多數的html 標籤都是區塊元素 可以應用盒模型(margin &amp; padding 上下左右都會有作用) 行內元素(inline element)CSS樣式預設為display:inline 元素的前後不會產生斷行 height &amp; width 對於inline element沒有作用 padding &amp; margin 只對於左右邊界有作用，上下沒有 行內元素如下列 區塊-行內元素(inline-block)結合了兩種元素的優點，CSS樣式預設為display:inline-block 只佔據元素內容所需要的空間 不會造成斷行 可以應用盒模型(margin &amp; padding 上下左右都會有作用)","link":"/2024/09/07/CSS-Fundamentals/"}],"tags":[{"name":"React","slug":"React","link":"/tags/React/"},{"name":"CSS","slug":"CSS","link":"/tags/CSS/"}],"categories":[{"name":"React","slug":"React","link":"/categories/React/"},{"name":"CSS","slug":"CSS","link":"/categories/CSS/"}],"pages":[{"title":"categories","text":"","link":"/categories/index.html"}]}